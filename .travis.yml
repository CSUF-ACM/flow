
language: go

services:
  - docker

env:
  FLOWTHRU_TEST_DB_HOST=localhost
  FLOWTHRU_TEST_DB_PORT=5432
  FLOWTHRU_TEST_DB_USER=user
  FLOWTHRU_TEST_DB_PASSWORD=password
  FLOWTHRU_TEST_DB_NAME=test
  GO111MODULE=on

stages:
  - "tests"
  - name: "deploy to production"
    if: tag IS present

jobs:
  include:
    - stage: "tests"
      name: "front end tests"
      script:
        - docker pull node:12
        - docker run --rm -e CI=true -v $(pwd)/client:/src -w /src node:12 /bin/sh -c "npm install; npm test"
    - script:
        - docker build ./database/ -t postgres-flowthru-test-db
        - docker run -d --name test-db -p 127.0.0.1:80:5432 postgres-flowthru-test-db
        - sleep 15
        - docker container exec -i test-db psql -U user test < ${PWD}/database/sample-data.sql
        - cd server; go test -v ./...
      name: "back end tests"
    - stage: "deploy to production"
      script:
        - cd client; zip -r client.zip .; cd ..
        - cd server; zip -r server.zip .; cd ..
      deploy:
        - provider: elasticbeanstalk
          access_key_id:
            secure: $AWS_ACCESS_KEY_ID
          secret_access_key:
            secure: $AWS_SECRET_ACCESS_KEY
          region: "us-east-1"
          app: "flowthru-production"
          env: "production-server"
          bucket_name: $AWS_BUCKET_NAME
          zip_file: "server/server.zip"
          skip_cleanup: true
          on:
            all_branches: true
            condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+
        - provider: elasticbeanstalk
          access_key_id:
            secure: $AWS_ACCESS_KEY_ID
          secret_access_key:
            secure: $AWS_SECRET_ACCESS_KEY
          region: "us-east-1"
          app: "flowthru-production"
          env: "production-client"
          bucket_name: $AWS_BUCKET_NAME
          zip_file: "client/client.zip"
          skip_cleanup: true
          on:
            all_branches: true
            condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+
